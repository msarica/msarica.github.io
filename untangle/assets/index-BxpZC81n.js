(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const s of i)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function e(i){const s={};return i.integrity&&(s.integrity=i.integrity),i.referrerPolicy&&(s.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?s.credentials="include":i.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(i){if(i.ep)return;i.ep=!0;const s=e(i);fetch(i.href,s)}})();class u{static distance(t,e){const n=e.x-t.x,i=e.y-t.y;return Math.sqrt(n*n+i*i)}static pointInCircle(t,e,n){return this.distance(t,e)<=n}static lineSegmentsIntersect(t,e,n,i){const s=(i.y-n.y)*(e.x-t.x)-(i.x-n.x)*(e.y-t.y);if(Math.abs(s)<1e-10)return!1;const o=((i.x-n.x)*(t.y-n.y)-(i.y-n.y)*(t.x-n.x))/s,c=((e.x-t.x)*(t.y-n.y)-(e.y-t.y)*(t.x-n.x))/s;return o>=0&&o<=1&&c>=0&&c<=1}static randomPosition(t,e,n=50){return{x:n+Math.random()*(t-2*n),y:n+Math.random()*(e-2*n)}}static randomPositionDistributed(t,e,n=50){const i=Math.floor(Math.sqrt((t-2*n)*(e-2*n)/(n*n))),s=Math.floor((e-2*n)/n),o=(t-2*n)/i,c=(e-2*n)/s,a=Math.floor(Math.random()*i),r=Math.floor(Math.random()*s);return{x:n+a*o+Math.random()*o,y:n+r*c+Math.random()*c}}static clamp(t,e,n){return Math.min(Math.max(t,e),n)}}class f{static CIRCLE_RADIUS=20;static MIN_DISTANCE=120;static generateLevel(t,e,n){if(n&&n.levelNumber===t&&n.canvasSize.x===e.x&&n.canvasSize.y===e.y)return{circles:this.deepCopyCircles(n.circles),lines:this.deepCopyLines(n.lines)};const{nodeCount:i,connectionsPerNode:s}=this.calculateLevelParameters(t);return this.generateSolvableLevel(i,s,e)}static calculateLevelParameters(t){const i=Math.floor((t-1)/3),s=(t-1)%3,o=6+i,c=3+s;return{nodeCount:o,connectionsPerNode:c}}static generateSolvableLevel(t,e,n){const i=this.createNonIntersectingLayout(t,n),s=this.generateNonIntersectingConnections(i,e);this.scrambleNodePositions(i,n);const o=Math.min(...i.map(c=>c.connections.length));return console.log(`Generated level: ${i.length} nodes, ${s.length} lines`),o<3&&console.error("ERROR: Some nodes have fewer than 3 connections!"),{circles:i,lines:s}}static createNonIntersectingLayout(t,e){const n=[],s=e.x/2,o=e.y/2,c=Math.min(e.x,e.y)/2-100;for(let a=0;a<t;a++){const r=2*Math.PI*a/t,h=s+c*Math.cos(r),l=o+c*Math.sin(r);n.push({id:a,position:{x:h,y:l},radius:this.CIRCLE_RADIUS,isDragging:!1,connections:[]})}return n}static generateNonIntersectingConnections(t,e){const n=[],i=new Set;t.forEach(a=>a.connections=[]);const s=t.map(a=>({circle:a,priority:0}));let o=0;const c=1e3;for(;o<c;){s.sort((r,h)=>{const l=Math.max(0,3-r.circle.connections.length);return Math.max(0,3-h.circle.connections.length)-l});let a=!1;for(const r of s){const h=r.circle;if(h.connections.length>=3)continue;const l=this.findBestConnectionTarget(h,t,e,i);if(!l)continue;const m=`${Math.min(h.id,l.id)}-${Math.max(h.id,l.id)}`;h.connections.push(l.id),l.connections.push(h.id),i.add(m),n.push({from:h.id,to:l.id,isIntersecting:!1}),a=!0;break}if(!a)break;o++}return t.forEach(a=>{for(;a.connections.length<e;){const r=this.findBestConnectionTarget(a,t,e,i);if(!r)break;const h=`${Math.min(a.id,r.id)}-${Math.max(a.id,r.id)}`;a.connections.push(r.id),r.connections.push(a.id),i.add(h),n.push({from:a.id,to:r.id,isIntersecting:!1})}}),n}static findBestConnectionTarget(t,e,n,i){const s=e.filter(r=>r.id!==t.id&&r.connections.length<n&&!t.connections.includes(r.id));if(s.length===0)return null;const c=s.sort((r,h)=>{const l=u.distance(t.position,r.position),m=u.distance(t.position,h.position);return l-m})[0],a=`${Math.min(t.id,c.id)}-${Math.max(t.id,c.id)}`;return i.has(a)?null:c}static scrambleNodePositions(t,e){t.forEach(s=>{let o,c=0,a=null,r=-1;do{o=u.randomPositionDistributed(e.x,e.y,80);const h=Math.min(...t.filter(l=>l.id!==s.id).map(l=>u.distance(o,l.position)));h>r&&(r=h,a=o),c++}while(c<200&&t.some(h=>h.id!==s.id&&u.distance(o,h.position)<this.MIN_DISTANCE));s.position=a||o})}static deepCopyCircles(t){return t.map(e=>({...e,position:{...e.position},connections:[...e.connections]}))}static deepCopyLines(t){return t.map(e=>({...e}))}}class g{static updateIntersections(t,e){e.forEach(n=>n.isIntersecting=!1);for(let n=0;n<e.length;n++)for(let i=n+1;i<e.length;i++){const s=e[n],o=e[i];if(this.shareEndpoint(s,o))continue;const c=t.find(l=>l.id===s.from),a=t.find(l=>l.id===s.to),r=t.find(l=>l.id===o.from),h=t.find(l=>l.id===o.to);u.lineSegmentsIntersect(c.position,a.position,r.position,h.position)&&(s.isIntersecting=!0,o.isIntersecting=!0)}}static shareEndpoint(t,e){return t.from===e.from||t.from===e.to||t.to===e.from||t.to===e.to}}class p{canvas;ctx;canvasSize;constructor(t){this.canvas=t;const e=t.getContext("2d");if(!e)throw new Error("Failed to get 2D context");this.ctx=e,this.canvasSize={x:t.width,y:t.height}}resize(t,e){this.canvas.width=t,this.canvas.height=e,this.canvasSize={x:t,y:e}}clear(){this.ctx.clearRect(0,0,this.canvasSize.x,this.canvasSize.y)}render(t,e,n){this.clear(),this.renderLines(e,n,t),this.renderCircles(t,n)}renderLines(t,e,n){t.forEach(i=>{const s=n.find(r=>r.id===i.from),o=n.find(r=>r.id===i.to);let c="#666",a=2;i.isIntersecting?(c="#ff4444",a=3):e!==null&&(i.from===e||i.to===e)&&(c="#4CAF50",a=3),this.ctx.strokeStyle=c,this.ctx.lineWidth=a,this.ctx.lineCap="round",this.ctx.beginPath(),this.ctx.moveTo(s.position.x,s.position.y),this.ctx.lineTo(o.position.x,o.position.y),this.ctx.stroke()})}renderCircles(t,e){t.forEach(n=>{const i=n.id===e;this.ctx.fillStyle=i?"#4CAF50":"#2196F3",this.ctx.beginPath(),this.ctx.arc(n.position.x,n.position.y,n.radius,0,2*Math.PI),this.ctx.fill(),this.ctx.strokeStyle=i?"#2E7D32":"#1976D2",this.ctx.lineWidth=2,this.ctx.stroke(),this.ctx.fillStyle="white",this.ctx.font="bold 14px Arial",this.ctx.textAlign="center",this.ctx.textBaseline="middle",this.ctx.fillText(n.id.toString(),n.position.x,n.position.y)})}}class v{canvas;onCircleDragStart;onCircleDrag;onCircleDragEnd;draggedCircleId=null;constructor(t,e,n,i){this.canvas=t,this.onCircleDragStart=e,this.onCircleDrag=n,this.onCircleDragEnd=i,this.setupEventListeners()}setupEventListeners(){this.canvas.addEventListener("mousedown",this.handleMouseDown.bind(this)),this.canvas.addEventListener("mousemove",this.handleMouseMove.bind(this)),this.canvas.addEventListener("mouseup",this.handleMouseUp.bind(this)),this.canvas.addEventListener("mouseleave",this.handleMouseUp.bind(this)),this.canvas.addEventListener("touchstart",this.handleTouchStart.bind(this),{passive:!1}),this.canvas.addEventListener("touchmove",this.handleTouchMove.bind(this),{passive:!1}),this.canvas.addEventListener("touchend",this.handleTouchEnd.bind(this),{passive:!1}),this.canvas.addEventListener("touchcancel",this.handleTouchEnd.bind(this),{passive:!1})}handleMouseDown(t){t.preventDefault();const e=this.getMousePosition(t);this.handlePointerDown(e)}handleMouseMove(t){if(t.preventDefault(),this.draggedCircleId!==null){const e=this.getMousePosition(t);this.handlePointerMove(e)}}handleMouseUp(t){t.preventDefault(),this.handlePointerUp()}handleTouchStart(t){if(t.preventDefault(),t.touches.length===1){const e=t.touches[0],n=this.getTouchPosition(e);this.handlePointerDown(n)}}handleTouchMove(t){if(t.preventDefault(),t.touches.length===1&&this.draggedCircleId!==null){const e=t.touches[0],n=this.getTouchPosition(e);this.handlePointerMove(n)}}handleTouchEnd(t){t.preventDefault(),this.handlePointerUp()}handlePointerDown(t){const e=this.findCircleAtPosition(t);e!==null&&(this.draggedCircleId=e,this.onCircleDragStart(e,t))}handlePointerMove(t){this.draggedCircleId!==null&&this.onCircleDrag(this.draggedCircleId,t)}handlePointerUp(){this.draggedCircleId!==null&&(this.onCircleDragEnd(this.draggedCircleId),this.draggedCircleId=null)}findCircleAtPosition(t){return null}getMousePosition(t){const e=this.canvas.getBoundingClientRect();return{x:t.clientX-e.left,y:t.clientY-e.top}}getTouchPosition(t){const e=this.canvas.getBoundingClientRect();return{x:t.clientX-e.left,y:t.clientY-e.top}}updateCircleHitTest(t){this.findCircleAtPosition=e=>{for(const n of t)if(u.pointInCircle(e,n.position,n.radius))return n.id;return null}}}class C{canvas;renderer;inputManager;gameState;animationId=null;levelDisplay;restartButton;newGameButton;congratulationsElement;nextLevelButton;newGameDialog;confirmNewGameButton;cancelNewGameButton;constructor(t){this.canvas=t,this.renderer=new p(t),this.gameState={circles:[],lines:[],draggedCircleId:null,canvasSize:{x:0,y:0},currentLevel:this.loadSavedLevel(),isCompleted:!1,levelConfigs:new Map},this.levelDisplay=document.getElementById("level-display"),this.restartButton=document.getElementById("restart-btn"),this.newGameButton=document.getElementById("new-game-btn"),this.congratulationsElement=document.getElementById("congratulations"),this.nextLevelButton=document.getElementById("next-level-btn"),this.newGameDialog=document.getElementById("new-game-dialog"),this.confirmNewGameButton=document.getElementById("confirm-new-game-btn"),this.cancelNewGameButton=document.getElementById("cancel-new-game-btn"),this.restartButton.addEventListener("click",()=>this.initializeGame()),this.newGameButton.addEventListener("click",()=>this.showNewGameDialog()),this.nextLevelButton.addEventListener("click",()=>this.nextLevel()),this.confirmNewGameButton.addEventListener("click",()=>this.startNewGame()),this.cancelNewGameButton.addEventListener("click",()=>this.hideNewGameDialog()),this.inputManager=new v(t,this.onCircleDragStart.bind(this),this.onCircleDrag.bind(this),this.onCircleDragEnd.bind(this)),this.setupCanvas(),this.initializeGame(),this.gameLoop()}setupCanvas(){const t=()=>{const e=this.canvas.parentElement,n=e.clientWidth,i=e.clientHeight;this.renderer.resize(n,i),this.gameState.canvasSize={x:n,y:i}};t(),window.addEventListener("resize",t)}initializeGame(){this.gameState.isCompleted=!1,this.hideCongratulations();const t=this.gameState.levelConfigs.get(this.gameState.currentLevel),e=f.generateLevel(this.gameState.currentLevel,this.gameState.canvasSize,t);this.gameState.circles=e.circles,this.gameState.lines=e.lines,t||this.storeLevelConfig(this.gameState.currentLevel,e.circles,e.lines),this.inputManager.updateCircleHitTest(this.gameState.circles),g.updateIntersections(this.gameState.circles,this.gameState.lines),this.updateLevelDisplay()}updateLevelDisplay(){this.levelDisplay.textContent=`Level ${this.gameState.currentLevel}`}showCongratulations(){this.congratulationsElement.classList.add("show")}hideCongratulations(){this.congratulationsElement.classList.remove("show")}nextLevel(){this.gameState.currentLevel++,this.saveCurrentLevel(),this.initializeGame()}showNewGameDialog(){this.newGameDialog.classList.add("show")}hideNewGameDialog(){this.newGameDialog.classList.remove("show")}startNewGame(){this.gameState.currentLevel=1,this.gameState.levelConfigs.clear(),this.saveCurrentLevel(),this.hideNewGameDialog(),this.initializeGame()}loadSavedLevel(){const t=localStorage.getItem("untangle-game-level");return t?parseInt(t,10):1}saveCurrentLevel(){localStorage.setItem("untangle-game-level",this.gameState.currentLevel.toString())}storeLevelConfig(t,e,n){const i={circles:this.deepCopyCircles(e),lines:this.deepCopyLines(n),levelNumber:t,canvasSize:{...this.gameState.canvasSize}};this.gameState.levelConfigs.set(t,i)}deepCopyCircles(t){return t.map(e=>({...e,position:{...e.position},connections:[...e.connections]}))}deepCopyLines(t){return t.map(e=>({...e}))}checkForCompletion(){if(this.gameState.isCompleted)return;this.gameState.lines.some(e=>e.isIntersecting)||(this.gameState.isCompleted=!0,this.showCongratulations())}onCircleDragStart(t,e){const n=this.gameState.circles.find(i=>i.id===t);n&&(n.isDragging=!0,this.gameState.draggedCircleId=t)}onCircleDrag(t,e){const n=this.gameState.circles.find(i=>i.id===t);n&&(n.position.x=u.clamp(e.x,n.radius,this.gameState.canvasSize.x-n.radius),n.position.y=u.clamp(e.y,n.radius,this.gameState.canvasSize.y-n.radius),g.updateIntersections(this.gameState.circles,this.gameState.lines),this.checkForCompletion())}onCircleDragEnd(t){const e=this.gameState.circles.find(n=>n.id===t);e&&(e.isDragging=!1,this.gameState.draggedCircleId=null)}gameLoop(){this.renderer.render(this.gameState.circles,this.gameState.lines,this.gameState.draggedCircleId),this.animationId=requestAnimationFrame(()=>this.gameLoop())}destroy(){this.animationId!==null&&cancelAnimationFrame(this.animationId)}}document.addEventListener("DOMContentLoaded",()=>{const d=document.createElement("canvas"),t=document.getElementById("game-container");if(!t)throw new Error("Game container not found");t.appendChild(d);const e=new C(d);window.addEventListener("beforeunload",()=>{e.destroy()})});
