var e=Object.defineProperty,t=Object.defineProperties,n=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,r=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable,i=(t,n,s)=>n in t?e(t,n,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[n]=s,o=(e,t)=>{for(var n in t||(t={}))r.call(t,n)&&i(e,n,t[n]);if(s)for(var n of s(t))a.call(t,n)&&i(e,n,t[n]);return e},c=(e,t,n)=>i(e,"symbol"!=typeof t?t+"":t,n),l=(e,t,n)=>new Promise((s,r)=>{var a=e=>{try{o(n.next(e))}catch(t){r(t)}},i=e=>{try{o(n.throw(e))}catch(t){r(t)}},o=e=>e.done?s(e.value):Promise.resolve(e.value).then(a,i);o((n=n.apply(e,t)).next())});function h(...e){console.log(...e)}!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver(e=>{for(const n of e)if("childList"===n.type)for(const e of n.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)}).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?t.credentials="include":"anonymous"===e.crossOrigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();class d{constructor(e){c(this,"game"),c(this,"currentChapterIndex",0),c(this,"currentSentenceIndex",0),c(this,"unlockedChapters",[0]),c(this,"completedSentences",{}),c(this,"listeners",[]),c(this,"STORAGE_KEY","verse-quest-game-state"),c(this,"puzzleStates",{}),this.game=e,this.loadGameState()}getCurrentChapter(){return this.game.chapters[this.currentChapterIndex]}getCurrentSentence(){return this.getCurrentChapter().sentences[this.currentSentenceIndex]}getCurrentSentenceIndex(){return this.currentSentenceIndex}getCurrentChapterIndex(){return this.currentChapterIndex}getTotalSentences(){return this.getCurrentChapter().sentences.length}getTotalChapters(){return this.game.chapters.length}nextSentence(){const e=this.getCurrentChapter();return this.currentSentenceIndex<e.sentences.length-1&&(this.currentSentenceIndex++,this.puzzleStates={},this.saveGameState(),this.notifyListeners(),!0)}nextChapter(){return this.currentChapterIndex<this.game.chapters.length-1&&(this.currentChapterIndex++,this.currentSentenceIndex=0,this.unlockChapter(this.currentChapterIndex),this.puzzleStates={},this.saveGameState(),this.notifyListeners(),!0)}goToChapter(e){return!!(this.isChapterUnlocked(e)&&e>=0&&e<this.game.chapters.length)&&(this.currentChapterIndex=e,this.currentSentenceIndex=0,this.puzzleStates={},this.saveGameState(),this.notifyListeners(),!0)}goToSentence(e,t){return!!(this.isChapterUnlocked(e)&&e>=0&&e<this.game.chapters.length&&t>=0&&t<this.game.chapters[e].sentences.length)&&(this.currentChapterIndex=e,this.currentSentenceIndex=t,this.puzzleStates={},this.saveGameState(),this.notifyListeners(),!0)}isGameComplete(){return this.currentChapterIndex>=this.game.chapters.length-1&&this.currentSentenceIndex>=this.getCurrentChapter().sentences.length-1}subscribe(e){this.listeners.push(e)}notifyListeners(){this.listeners.forEach(e=>e())}isChapterUnlocked(e){return this.unlockedChapters.includes(e)}getUnlockedChapters(){return[...this.unlockedChapters]}unlockChapter(e){this.unlockedChapters.includes(e)||(this.unlockedChapters.push(e),h(`Chapter ${e} unlocked! Unlocked chapters:`,this.unlockedChapters))}markSentenceCompleted(e,t){this.completedSentences[e]||(this.completedSentences[e]=[]),this.completedSentences[e].includes(t)||(this.completedSentences[e].push(t),h(`Sentence ${t} completed in chapter ${e}`));if(t===this.game.chapters[e].sentences.length-1){const t=e+1;t<this.game.chapters.length&&(h(`Last sentence of chapter ${e} completed, unlocking chapter ${t}`),this.unlockChapter(t))}this.saveGameState()}isSentenceCompleted(e,t){var n;return(null==(n=this.completedSentences[e])?void 0:n.includes(t))||!1}getCompletedSentences(e){return this.completedSentences[e]||[]}getFurthestUnlockedLevel(){const e=this.unlockedChapters.length>0?Math.max(...this.unlockedChapters):0,t=this.getCompletedSentences(e),n=this.game.chapters[e].sentences.length;if(t.length>=n){const t=e+1;return t<this.game.chapters.length&&this.isChapterUnlocked(t)?{chapterIndex:t,sentenceIndex:0}:{chapterIndex:e,sentenceIndex:n-1}}if(0===t.length)return{chapterIndex:e,sentenceIndex:0};const s=Math.max(...t);return{chapterIndex:e,sentenceIndex:Math.min(s+1,n-1)}}goToFurthestUnlockedLevel(){const e=this.getFurthestUnlockedLevel();return this.goToSentence(e.chapterIndex,e.sentenceIndex)}saveGameState(){const e=this.getCurrentSentenceId(),t=this.puzzleStates[e],n={currentChapterIndex:this.currentChapterIndex,currentSentenceIndex:this.currentSentenceIndex,unlockedChapters:this.unlockedChapters,completedSentences:this.completedSentences,puzzleStates:void 0!==t?{[e]:t}:{}};try{localStorage.setItem(this.STORAGE_KEY,JSON.stringify(n)),h("Game state saved:",n)}catch(s){console.warn("Failed to save game state:",s)}}loadGameState(){try{const e=localStorage.getItem(this.STORAGE_KEY);if(e){const t=JSON.parse(e);if(h("Loading game state:",t),this.isValidGameState(t)){this.currentChapterIndex=t.currentChapterIndex,this.currentSentenceIndex=t.currentSentenceIndex,this.unlockedChapters=t.unlockedChapters,this.completedSentences=t.completedSentences;const e=t.puzzleStates||{},n=this.getCurrentSentenceId();this.puzzleStates=void 0!==e[n]?{[n]:e[n]}:{},h("Game state loaded successfully. Unlocked chapters:",this.unlockedChapters)}else console.warn("Invalid game state, using defaults")}}catch(e){console.warn("Failed to load game state:",e)}}isValidGameState(e){if("number"!=typeof e.currentChapterIndex||"number"!=typeof e.currentSentenceIndex||!Array.isArray(e.unlockedChapters)||"object"!=typeof e.completedSentences)return!1;if(e.currentChapterIndex<0||e.currentChapterIndex>=this.game.chapters.length)return!1;const t=this.game.chapters[e.currentChapterIndex];return!(e.currentSentenceIndex<0||e.currentSentenceIndex>=t.sentences.length)&&!!e.unlockedChapters.every(e=>"number"==typeof e&&e>=0&&e<this.game.chapters.length)}getCurrentSentenceId(){return this.getCurrentSentence().id}getPuzzleState(e){return this.puzzleStates[e]}setPuzzleState(e,t){this.puzzleStates[e]=t,this.saveGameState()}clearPuzzleState(e){void 0!==this.puzzleStates[e]&&(delete this.puzzleStates[e],this.saveGameState())}resetGame(){this.currentChapterIndex=0,this.currentSentenceIndex=0,this.unlockedChapters=[0],this.completedSentences={},this.puzzleStates={},this.saveGameState(),this.notifyListeners()}}class u{constructor(e,t,n,s,r,a=!0,i){c(this,"container"),c(this,"overlay"),c(this,"dialogElement"),c(this,"allowClose"),this.container=e,this.allowClose=a,this.createDialog(t,n,s,r,i)}createDialog(e,t,n,s,r){this.overlay=document.createElement("div"),this.overlay.className="dialog-overlay",this.dialogElement=document.createElement("div"),this.dialogElement.className="dialog";let a="";s&&s.length>0&&(a=`\n                <div class="correct-combination">\n                    <p class="combination-label">Correct combination:</p>\n                    <div class="combination-emojis">\n                        ${s.map(e=>`<span class="combination-emoji">${e}</span>`).join("")}\n                    </div>\n                </div>\n            `);let i="";if(r){let e="";r.translation&&(e=`\n                    <p class="sentence-translation">"${r.translation}"</p>\n                `),i=`\n                <div class="sentence-display">\n                    <p class="sentence-label">${r.chapterName} - ${r.sentenceId}</p>\n                    <p class="sentence-text">"${r.sentenceText}"</p>\n                    ${e}\n                </div>\n            `}this.dialogElement.innerHTML=`\n            ${this.allowClose?'<button class="dialog-close" id="dialog-close">Ã—</button>':""}\n            <div class="dialog-content">\n                <p class="dialog-message">${e}</p>\n                ${i}\n                ${a}\n                <button class="dialog-button">${t}</button>\n            </div>\n        `;if(this.dialogElement.querySelector(".dialog-button").addEventListener("click",e=>{e.preventDefault(),e.stopPropagation(),e.stopImmediatePropagation(),n()}),this.allowClose){this.dialogElement.querySelector(".dialog-close").addEventListener("click",e=>{e.preventDefault(),e.stopPropagation(),e.stopImmediatePropagation(),this.close()})}this.overlay.appendChild(this.dialogElement),this.container.appendChild(this.overlay),setTimeout(()=>{this.overlay.classList.add("show")},10)}close(){this.overlay.classList.remove("show"),setTimeout(()=>{this.overlay.parentNode&&this.overlay.parentNode.removeChild(this.overlay)},300)}forceClose(){this.close()}}const p=new Map;class g{constructor(){c(this,"container",null),c(this,"onComplete",null),c(this,"onStateChange",null),c(this,"currentState",{}),c(this,"words",[]),c(this,"puzzleWords",[]),c(this,"correctWords",[]),c(this,"currentWordIndex",0),c(this,"selectedTranslations",[]),c(this,"remainingWords",[])}mount(e,t,n){var s,r,a;this.container=e,this.onComplete=n,this.onStateChange=t.onStateChange,this.words=t.originals||[],this.puzzleWords=[...t.puzzleWords||[]],this.correctWords=[...t.correctWords||[]],this.currentWordIndex=(null==(s=t.initialState)?void 0:s.currentWordIndex)||0,this.selectedTranslations=(null==(r=t.initialState)?void 0:r.selectedTranslations)||[];const i=this.getCurrentSentenceWords();(null==(a=t.initialState)?void 0:a.remainingWords)&&(this.currentWordIndex>0||this.selectedTranslations.length>0)?this.remainingWords=t.initialState.remainingWords:this.remainingWords=[...i].sort(()=>Math.random()-.5),this.render()}unmount(){this.container&&(this.container.innerHTML=""),this.container=null,this.onComplete=null,this.onStateChange=null}render(){this.container&&(this.container.innerHTML=`\n            <div class="word-translation-puzzle">\n                <div class="arabic-text">\n                    <p class="verse-text">\n                        ${this.words.map((e,t)=>t<this.currentWordIndex?`<span class="completed-word">${e}</span>`:t===this.currentWordIndex?`<span class="current-word">${e}</span>`:`<span class="future-word">${e}</span>`).join(" ")}\n                    </p>\n                </div>\n\n                <div class="selected-translations">\n                    <div class="selected-container">\n                        ${this.selectedTranslations.map(e=>`\n                            <span class="selected-translation">${e}</span>\n                        `).join("")}\n                    </div>\n                </div>\n\n                <div class="translation-grid">\n                    <div class="grid-container">\n                        ${this.remainingWords.map(e=>`\n                            <button class="translation-button" data-word="${e}">${e}</button>\n                        `).join("")}\n                    </div>\n                </div>\n\n            </div>\n        `,this.setupEventListeners())}setupEventListeners(){if(!this.container)return;this.container.querySelectorAll(".translation-button").forEach(e=>{e.addEventListener("click",e=>{const t=e.target.getAttribute("data-word");t&&this.selectTranslation(t)})})}selectTranslation(e){const t=this.correctWords[this.currentWordIndex];e===t?(this.remainingWords=this.remainingWords.filter(t=>t!==e),this.selectedTranslations.push(e),this.currentWordIndex++,this.saveState(),this.currentWordIndex>=this.words.length?this.onComplete&&this.onComplete({correct:!0,selectedTranslations:this.selectedTranslations,correctWords:this.correctWords}):this.render()):(this.clearSelection(),this.showErrorFeedback(e))}showErrorFeedback(e){if(!this.container)return;const t=this.container.querySelector(`[data-word="${e}"]`);t&&(t.classList.add("wrong-selection"),setTimeout(()=>{t.classList.remove("wrong-selection")},1e3))}clearSelection(){this.selectedTranslations=[],this.currentWordIndex=0;const e=this.getCurrentSentenceWords();this.remainingWords=this.remainingWords.filter(t=>e.includes(t));const t=new Set(this.remainingWords),n=e.filter(e=>!t.has(e));this.remainingWords=[...this.remainingWords,...n],this.saveState(),this.render()}getCurrentSentenceWords(){return this.puzzleWords.filter(e=>this.correctWords.includes(e))}saveState(){this.currentState={currentWordIndex:this.currentWordIndex,selectedTranslations:this.selectedTranslations,remainingWords:this.remainingWords},this.onStateChange&&this.onStateChange(this.currentState)}}let m=!1;function S(){var e,t;m||(e="word-translation-grid",t=()=>new g,p.set(e,t),m=!0)}class v{constructor(e){c(this,"gameState"),c(this,"container"),c(this,"dialog",null),c(this,"activePuzzle",{unmount:null}),S(),this.gameState=e,this.gameState.subscribe(()=>this.renderGame())}render(e){this.container=e,this.renderGame()}renderGame(){const e=this.gameState.getCurrentChapter();this.container.innerHTML=`\n            <div class="game-container">\n                <header class="game-header">\n                    <div class="header-top">\n                        <h1 class="clickable-title" id="chapter-title">\n                            ${e.name} \n                            <span class="progress-in-title">(${this.gameState.getCurrentSentenceIndex()+1}/${this.gameState.getTotalSentences()})</span>\n                        </h1>\n                    </div>\n                    <div class="chapter-navigation" id="chapter-navigation" style="display: none;">\n                        <div class="chapter-navigation-content">\n                            <button class="chapter-nav-close" id="chapter-nav-close">Ã—</button>\n                            ${this.renderChapterNavigation()}\n                        </div>\n                    </div>\n                </header>\n                \n                <main class="game-main">\n                    <div class="puzzle-container">\n                        <div class="puzzle-host"></div>\n                    </div>\n                </main>\n                \n                <div class="version-display">v1.0.5</div>\n            </div>\n        `,this.setupEventListeners(),this.setupPuzzle()}renderChapterNavigation(){const e=this.gameState.game.chapters,t=this.gameState.getUnlockedChapters(),n=this.gameState.getCurrentChapterIndex();return`\n            <div class="chapters-list">\n                <h3>${this.gameState.game.config.ui.chapterListTitle}</h3>\n                \n                <div class="chapters-grid">\n                    ${e.map((e,s)=>{const r=t.includes(s),a=s===n,i=this.gameState.getCompletedSentences(s),o=e.sentences.length,c=i.length;return`\n                            <div class="chapter-item ${r?"unlocked":"locked"} ${a?"current":""}" \n                                 data-chapter-index="${s}">\n                                <div class="chapter-header">\n                                    <h4>${e.name}</h4>\n                                    ${r?`<span class="progress-badge">${c}/${o}</span>`:'<span class="lock-icon">ðŸ”’</span>'}\n                                </div>\n                                <p class="chapter-description">${e.description}</p>\n                                ${r?this.renderChapterSentences(s,i):""}\n                            </div>\n                        `}).join("")}\n                </div>\n            </div>\n        `}renderChapterSentences(e,t){const n=this.gameState.game.chapters[e],s=this.gameState.getCurrentChapterIndex(),r=this.gameState.getCurrentSentenceIndex();return`\n            <div class="sentences-list">\n                ${n.sentences.map((n,a)=>{const i=t.includes(a),o=e===s&&a===r,c=this.gameState.isChapterUnlocked(e),l=a>0&&t.includes(a-1);let h=0===a&&c||l||i;return o&&(h=!0),`\n                        <div class="sentence-item ${i?"completed":""} ${h?"unlocked":"locked"} ${o?"current":""}" \n                             data-chapter-index="${e}" \n                             data-sentence-index="${a}">\n                            <span class="sentence-number">${n.id}</span>\n                            <span class="sentence-preview">${n.sentence.substring(0,50)}${n.sentence.length>50?"...":""}</span>\n                            ${i?'<span class="checkmark">âœ“</span>':""}\n                        </div>\n                    `}).join("")}\n            </div>\n        `}setupEventListeners(){const e=this.container.querySelector("#chapter-title"),t=this.container.querySelector("#chapter-navigation"),n=this.container.querySelector("#chapter-nav-close");e&&t&&e.addEventListener("click",()=>{t.style.display="flex"}),n&&t&&n.addEventListener("click",()=>{t.style.display="none"}),t&&t.addEventListener("click",e=>{e.target===t&&(t.style.display="none")}),this.setupChapterNavigation()}setupChapterNavigation(){this.container.querySelectorAll(".sentence-item.unlocked").forEach(e=>{e.addEventListener("click",t=>{t.stopPropagation();const n=parseInt(e.getAttribute("data-chapter-index")||"0"),s=parseInt(e.getAttribute("data-sentence-index")||"0");this.gameState.goToSentence(n,s);const r=this.container.querySelector("#chapter-navigation");r&&(r.style.display="none"),this.dialog&&(this.dialog.forceClose(),this.dialog=null)})})}setupPuzzle(){var e,s,r;const a=this.container.querySelector(".puzzle-host");if(!a)return;this.activePuzzle.unmount&&(this.activePuzzle.unmount(),this.activePuzzle.unmount=null);const i=this.gameState.getCurrentSentence(),c=(null==(e=i.puzzle)?void 0:e.type)||"word-translation-grid";let l={};if("word-translation-grid"===c){const e=this.gameState.getCurrentChapter().sentences.filter(e=>e.translations).flatMap(e=>e.translations);l={config:(null==(s=i.puzzle)?void 0:s.config)||{},originals:i.originals||[],translations:i.translations||[],puzzleWords:e,correctWords:i.translations||[]}}const h=o(o({},l),(null==(r=i.puzzle)?void 0:r.config)||{});("emoji-sequence-grid"===c&&void 0===h.title||"word-translation-grid"===c&&void 0===h.title)&&(h.title=this.gameState.game.config.ui.title);const d=function(e){const t=p.get(e);if(!t)throw new Error(`Unknown puzzle type: ${e}`);return t()}(c),u=i.id,g=this.gameState.getPuzzleState(u);var m;d.mount(a,(m=o({},h),t(m,n({initialState:g,onStateChange:e=>{this.gameState.setPuzzleState(u,e)}}))),e=>{const t=this.gameState.getCurrentChapterIndex(),n=this.gameState.getCurrentSentenceIndex();this.gameState.clearPuzzleState(u),this.gameState.markSentenceCompleted(t,n),this.showCompletionDialog(null==e?void 0:e.correct)}),this.activePuzzle.unmount=()=>d.unmount()}showCompletionDialog(e){const t=this.gameState.getCurrentSentenceIndex()===this.gameState.getTotalSentences()-1,n=this.gameState.getCurrentChapterIndex()===this.gameState.getTotalChapters()-1,s=this.gameState.getCurrentSentence(),r=this.gameState.getCurrentChapter(),a=this.gameState.game.config.messages,i=a.encouraging;let o=i[Math.floor(Math.random()*i.length)],c=a.buttons.nextVerse;t&&n?(o=a.lastVerseLastChapter,c=a.buttons.playAgain):t&&(o=a.lastVerse,c=a.buttons.nextChapter);const l={chapterName:r.name,sentenceId:s.id,sentenceText:s.sentence,translation:s.translation};this.dialog=new u(this.container,o,c,()=>this.proceedToNext(),e,!1,l)}proceedToNext(){const e=this.gameState.getCurrentSentenceIndex()===this.gameState.getTotalSentences()-1,t=this.gameState.getCurrentChapterIndex()===this.gameState.getTotalChapters()-1;!(e&&t)&&this.dialog&&(this.dialog.close(),this.dialog=null),e&&t?this.gameState.resetGame():e?this.gameState.nextChapter():this.gameState.nextSentence()}}document.title="Verse Quest v1.0.5";const C=document.querySelector('meta[name="apple-mobile-web-app-title"]');C&&C.setAttribute("content","Verse Quest v1.0.5");(new class{constructor(){c(this,"gameState",null),c(this,"gameUI",null)}init(){return l(this,null,function*(){try{const e=document.getElementById("app");e&&(e.innerHTML='<div class="loading"><div class="spinner"></div>Loading game data...</div>');const t=yield function(){return l(this,null,function*(){try{const t=yield fetch("./game.json");if(!t.ok)throw new Error(`Failed to load game data: ${t.statusText}`);const n=yield t.json(),s=[];for(const r of n.chapters)try{const e=yield fetch(`./${r}.json`);if(e.ok){const t=yield e.json();s.push(t)}else console.warn(`Failed to load chapter ${r}: ${e.statusText}`)}catch(e){console.error(`Error loading chapter ${r}:`,e)}return{id:n.id,name:n.name,description:n.description,config:n.config,chapters:s}}catch(e){return console.error("Error loading game data:",e),{id:"verse-quest-1",name:"Verse Quest",description:"A journey through emojis and verses",config:{ui:{chapterListTitle:"Chapters",title:"Select the emojis in the correct order:"},messages:{encouraging:["Great job!","Excellent work!","Well done!","Perfect!","Amazing!","Fantastic!","Outstanding!","Brilliant!","Wonderful!","Incredible!","Superb!","Magnificent!","Splendid!","Terrific!","Awesome!","Phenomenal!","Remarkable!","Exceptional!","Marvelous!","Spectacular!"],lastVerseLastChapter:"Congratulations! You have completed the entire journey!",lastVerse:"Chapter complete! Ready for the next chapter?",buttons:{nextVerse:"Next Verse",nextChapter:"Next Chapter",playAgain:"Play Again"}}},chapters:[]}}})}();this.gameState=new d(t),this.gameUI=new v(this.gameState),e&&this.gameUI.render(e)}catch(e){console.error("Failed to initialize app:",e);const t=document.getElementById("app");t&&(t.innerHTML='<div class="error">Failed to load game. Please refresh the page.</div>')}})}}).init().catch(e=>{console.error("Failed to initialize app:",e)});
